import re
import os
import time
import shutil
import openpyxl
import datetime
import threading
import telebot
import sqlite3
import requests
from telebot import types


# –ü–∞–ø–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
otkyda = os.path.join(os.path.dirname(__file__), "Downloads/")
kyda = os.path.join(os.path.dirname(__file__), 'pyp/')
# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è —Å–ø–∞–º-–∞—Ç–∞–∫–∏
SPAM_LIMIT = 8
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
spam_count = {}
# –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
WARNING_MESSAGE = "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
# –í—Ä–µ–º—è, –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
SPAM_TIME_LIMIT = 35
# –ê–¥–º–∏–Ω—ã, –µ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–ª—é—à–∫–∏
admin = [650093184, 650093184]
# –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .xlsx
im_done = 0
noww = datetime.datetime.now()
reboot_time = noww.strftime("%H:%M:%S")
say = ""
stroka = ""  # type: ignore
zachem_message = '‚ùì–ó–∞—á–µ–º –≤—ã –º–µ–Ω—è–µ—Ç–µ –∫–ª–∞—Å—Å?\nüòÖ–í–æ–∑–º–æ–∂–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥—Ä—É–∑–µ–π –Ω–∞ –∑–∞–≤—Ç—Ä–∞, —Ç–æ–≥–¥–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∏—Ö –∫–ª–∞—Å—Å –∏ –ø–ª—é—Å–∏–∫ –≤ –∫–æ–Ω—Ü–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫: "11–ë+" (–±–µ–∑ –∫–æ–≤—ã—á–µ–∫)\n‚úçüèª–ï—Å–ª–∏ –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ –≤ —ç—Ç–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ @maryin_n, –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å'

# –æ–±—ä—è–≤–ª—è–µ–º –±–æ—Ç–∞
bot = telebot.TeleBot('6417160051:AAE4yZDMbXw91trVBLSWASmGh0fxxxN-_U0')  # —Ä–µ–ª–∏–∑–Ω—ã–π –±–æ—Ç

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—á–∏—Ç–µ–ª–µ–π –∏ –∫–ª–∞—Å—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω–∏ –≤–µ–¥—É—Ç

teacher = ['–ù–ò–ù–ê–ù–ò–ö–û–õ–ê–ï–í–ù–ê', '–ê–ù–ê–°–¢–ê–°–ò–Ø–†–û–ú–ê–ù–û–í–ù–ê', '–ì–ê–õ–ò–ù–ê–ú–ò–•–ê–ô–õ–û–í–ù–ê', '–ê–ù–ê–°–¢–ê–°–ò–Ø–°–ï–†–ì–ï–ï–í–ù–ê']
name_teacher = ['–ù–∏–Ω–∞ –ù–∏–∫–æ–ª–∞–µ–≤–Ω–∞', '–ê–Ω–∞—Å—Ç–∞—Å–∏—è –†–æ–º–∞–Ω–æ–≤–Ω–∞', '–ì–∞–ª–∏–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞', '–ê–Ω–∞—Å—Ç–∞—Å–∏—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞']
teacher_urok = ["–ò—Å—Ç–æ—Ä–∏—è", "–Ω—Ñ–æ—Ä–º–∞—Ç", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "–ê–Ω–≥–ª"]
teacher_urok_for_zam = [["–ò—Å—Ç–æ—Ä–∏—è"], ["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–û—Å–Ω–æ–≤—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∏"], ["–ì–µ–æ–≥—Ä–∞—Ñ–∏—è"], ["–ê–Ω–≥–ª.—è–∑"]]
teacher_klass = [["8–ì", "8–î", "10–ê", "10–ë", "10–í", "10–ì", "10–î", "11–ê", "11–ë", "11–í", "11–ì", "11–î"],
                 ["5–ê", "5–ë", "5–í", "5–ì", "5–î", "5–ï", "6–ê", "6–ë", "6–í", "6–ì", "7–ê", "7–ë", "7–í", "7–ì", "11–ë", "11–ì"],
                 ['5–ê', '5–ë', '5–í', '5–ì', '5–î', '5–ï'], ['5–ê', '5–ï', "9–ê", "11–ê", "11–ë", "11–í", "11–ì", "11–î"]]
klass_ruk = ["", "11–ë", "", "11–î"]

# –°–ø–∏—Å–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–ª–∞—Å—Å–æ–≤

stok_klass = ['5-', '6-', '7-', '8-', '9-', '10-', '11-',
              '5–ê', '5–ë', '5–í', '5–ì', '5–î', '5–ï', '5A', '5B', '5V', '5G', '5D', '5E', '6–ê', '6–ë', '6–í', '6–ì', '6–î',
              '6–ï', '6A',
              '6B', '6V', '6G', '6D', '6E', '7–ê', '7–ë', '7–í', '7–ì', '7–î', '7–ï', '7A', '7B', '7V', '7G', '7D', '7E',
              '8–ê', '8–ë',
              '8–í', '8–ì', '8–î', '8–ï', '8A', '8B', '8V', '8G', '8D', '8E', '9–ê', '9–ë', '9–í', '9–ì', '9–î', '9–ï', '9A',
              '9B', '9V',
              '9G', '9D', '9E', '10–ê', '10–ë', '10–í', '10–ì', '10–î', '10–ï', '10A', '10B', '10V', '10G', '10D', '10E',
              '11–ê',
              '11–ë', '11–í', '11–ì', '11–î', '11–ï', '11A', '11B', '11V', '11G', '11D', '11E']

# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ –∫–ª–∞—Å—Å–æ–≤ –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã

awe = ["/" + i for i in stok_klass + teacher]

qwq = [i + "+" for i in stok_klass + teacher] + stok_klass + teacher

# —ç—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
os.chdir(kyda)

std_keyboard = types.ReplyKeyboardMarkup(True, True)  # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
std_keyboard.row("–ù–∞ —Å–µ–≥–æ–¥–Ω—è")
std_keyboard.row("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–ù–∞ –∑–∞–≤—Ç—Ä–∞")  # –ó–∞–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ : –ù–∞—Å—Ç—Ä–æ–π–∫–∏, –ù–∞ —Å–µ–≥–æ–¥–Ω—è, –ù–∞ –∑–∞–≤—Ç—Ä–∞

# –∫–æ–Ω–Ω–µ–∫—Ç –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('userdate.db', check_same_thread=False)
cursor = conn.cursor()
# —Å–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cursor.execute('''CREATE TABLE IF NOT EXISTS userdata
             (id INTEGER PRIMARY KEY AUTOINCREMENT,
             usertelegramid TEXT NOT NULL,
             class TEXT NOT NULL, settings TEXT DEFAULT '00000000', active INTEGER DEFAULT 0, user_tag TEXT)''')
# –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É
conn.commit()

logf = open('log.txt', 'a', encoding='utf-8')


def log(func):
    def wrapper(*args, **kwargs):
        try:
            arg = args
            start_time = datetime.datetime.now().strftime('%d/%m/%y %H:%M:%S')
            result = func(*args, **kwargs)
            end_time = datetime.datetime.now().strftime('%d/%m/%y %H:%M:%S')
            logf.write(f'[{start_time}] {func.__name__} started with {arg}, {kwargs}\n')
            logf.write(f'[{end_time}] {func.__name__} finished with {result}\n')
            return result
        except Exception as e:
            start_time = datetime.datetime.now().strftime('%d/%m/%y %H:%M:%S')
            logf.write(f'[{start_time}] ERROR at {func.__name__}: {str(e)}\n')
            raise e

    return wrapper


def clear_log():
    logf.truncate(0)
    start_time = datetime.datetime.now().strftime('%d/%m/%y %H:%M:%S')
    logf.write(f'[{start_time}] BOT HAS BEEN RESTARTED\n')
    logf.write(f'[{start_time}] LOG CLEARED\n')


def getMergedCellVal(sheet, cell):
    rng = [s for s in sheet.merged_cells.ranges if cell.coordinate in s]
    return sheet.cell(rng[0].min_row, rng[0].min_col).value if len(rng) != 0 else cell.value


# –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_settings_from_id(id):
    cursor.execute(f"SELECT settings FROM userdata WHERE usertelegramid=?", (id,))
    settings = cursor.fetchall()
    return settings


def holyday(x):
    days = ["01.09", "08.03", "05.10", "23.01", "09.04", "01.04", "12.03", "29.12", "30.12", "31.12"]
    text = ["üîî–° –ø–µ—Ä–≤—ã–º —Å–µ–Ω—Ç—è–±—Ä—è!", "üíê–° 8 –º–∞—Ä—Ç–∞!", "üßë‚Äçüè´–° –¥–Ω—ë–º —É—á–∏—Ç–µ–ª—è –Ω–∞—à–∏—Ö –ø–µ–¥–∞–≥–æ–≥–æ–≤!", "üõ°–° 23 —Ñ–µ–≤—Ä–∞–ª—è!", "üéóÔ∏è–° 9 –º–∞—è!",
            "üå∑–° 1 –º–∞—è!", "üöÄ–° –¥–Ω—ë–º –∫–æ—Å–º–æ–Ω–∞–≤—Ç–∏–∫–∏!", "üéÑ–° –Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º –ù–æ–≤—ã–º –≥–æ–¥–æ–º!", "üéÑ–° –Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º –ù–æ–≤—ã–º –≥–æ–¥–æ–º!",
            "üéÑ–° –Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º –ù–æ–≤—ã–º –≥–æ–¥–æ–º!"]
    year = int(datetime.date.today().strftime('%y'))
    for i in range(len(days)):
        if x == days[i]: return text[i]
    if x == '12.09' or '13.09':
        if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0:
            if x == '12.09': return "–°++ –¥–Ω—ë–º –ø—Ä–æ–≥—Ä–∞–º–∏—Å—Ç–∞!"
        else:
            if x == '13.09': return "–°++ –¥–Ω—ë–º –ø—Ä–æ–≥—Ä–∞–º–∏—Å—Ç–∞!"
    return 0


# —Ñ—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É—é—â–∞—è —Å–ø–∏—Å–æ–∫ –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç wiwod
@log
def xxx(need_class, sz, id=1, one=0, name="", klass="qwerty01"):
    os.chdir(kyda)
    skip = 1
    if one:
        current_file = openpyxl.load_workbook(filename="1.xlsx")
    else:
        if name:
            try:
                current_file = openpyxl.load_workbook(
                    filename=f"{kyda}{name}.xlsx")
            except:
                print("err opn")
                return "–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≥–ª—É—à–∫–∞. –ò–∑–≤–∏–Ω–∏—Ç–µ, —É –Ω–∞—Å –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞."
        elif sz == 1:
            try:
                current_file = openpyxl.load_workbook(
                    filename=f"{kyda}{(datetime.date.today()).strftime('%d.%m.%Y')}.xlsx")

                # current_file = openpyxl.load_workbook(filename="C:\\pyp\\09.10.2023.xlsx")
            except:
                return "–†–∞—Å–ø–∏—Å–∞–Ω–∏e –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        elif sz == 2:
            try:
                skip = 1
                if int(datetime.datetime.today().weekday()) == 4:
                    skip = 3
                elif int(datetime.datetime.today().weekday()) == 5:
                    skip = 2
                current_file = openpyxl.load_workbook(
                    filename=f"{kyda}{(datetime.date.today() + datetime.timedelta(days=skip)).strftime('%d.%m.%Y')}.xlsx")
            except:
                if str(id) in (list(subscribers().split())):
                    return "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –ø–æ–∫–∞ –Ω–µ—Ç"
                else:
                    return "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –ø–æ–∫–∞ –Ω–µ—Ç.\n–ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞—Å—Å—ã–ª–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞–ø–∏—Å–∞–≤ /subscribe"
    now_have = current_file.sheetnames
    table = current_file[now_have[0]]
    classes = []
    times = []
    cell = None  # type: ignore
    if sz == 1:
        x = datetime.date.today().strftime('%d.%m')
    else:
        x = (datetime.date.today() + datetime.timedelta(days=skip)).strftime('%d.%m')
    holydayli = holyday(x)
    if holydayli and (int(str((get_settings_from_id(id))[0][0])[3]) == 0):
        st = holydayli + "\n"
    else:
        st = ""
    if st:
        classes.append("")
        times.append(holydayli)
    classes.append("")
    nakakoe = table.cell(row=1, column=2).value  # type: ignore
    if nakakoe:
        if "—É—Ä–æ–∫–æ–≤" in nakakoe:
            nakakoe = nakakoe[:nakakoe.find("—É—Ä–æ–∫–æ–≤")] + nakakoe[nakakoe.find("—É—Ä–æ–∫–æ–≤") + 7:]
        if "–ò–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è" in nakakoe:
            nakakoe = nakakoe.replace("–ò–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è", "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
        times.append("üóì" + nakakoe)
        data = "üóì" + nakakoe
    else:
        times.append("üóì" + f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {x}.2023")
        data = "üóì" + f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {x}.2023"

    time_cell_coord = 2
    while re.fullmatch(r'\d{2}:\d{2} - \d{2}:\d{2}', table.cell(row=10, column=time_cell_coord).value) is None:
        time_cell_coord += 1

    def get_shedule(need_class):
        number = 1
        for row in table.iter_rows():  # type: ignore
            for cell in row:
                if cell.value == need_class:
                    row_num = cell.row
                    col_num = cell.column
                    for i in range(row_num + 1, row_num + 12):

                        if re.fullmatch(r'\d{2}:\d{2} - \d{2}:\d{2}',
                                        str(table.cell(row=i,
                                                       column=time_cell_coord).value)) is not None:  # type: ignore
                            cell = table.cell(row=i, column=col_num)  # type: ignore
                            if isinstance(cell, openpyxl.cell.cell.MergedCell):  # type: ignore
                                classes.append(getMergedCellVal(table, cell))

                            # –ô–ê –ü–ê–î–ñ–ò–ì–ê–¢–ï–õ–¨, –ü–ê–î–ñ–ò–ì–ê–¢–ï–õ–¨

                            elif re.fullmatch(r'=\$\w+\$\d+', str(cell.value)) is not None:
                                s = cell.value.replace('=', '').replace('$', '')
                                classes.append(table[s].value)
                            # –ë–û–õ–¨–®–ï –ù–ï –ü–ê–î–ñ–ò–ì–ê–¢–ï–õ–¨ :(

                            else:
                                classes.append(cell.value)  # type: ignore
                            cell = table.cell(row=i, column=time_cell_coord)  # type: ignore
                            if int(str((get_settings_from_id(id))[0][0])[4]) == 1 and not (klass in teacher):
                                times.append(f"({number}) {cell.value}")
                                number += 1
                            else:
                                times.append(cell.value)  # type: ignore
                        else:
                            break
        return list(map(lambda x, y: [x, y], times, classes))

    def les_check(s: str) -> re.Match:
        return re.fullmatch(
            r'[-a-zA-Z–ê-–Ø–∞-—è—ë–Å_.:,]+((\d+)|(–ì–µ–æ–ª.–º—É–∑–µ–π)|([–ë–ú].—Å–ø–æ—Ä—Ç.–∑–∞–ª)|(–ò—Å—Ç.–º—É–∑–µ–π)|(–ê–∫—Ç.–∑–∞–ª))((/[-a-zA-Z–ê-–Ø–∞-—è—ë–Å_.:,]+\d+)|(/\d+)|(/[-a-zA-Z–ê-–Ø–∞-—è—ë–Å_.:,]+((\d+)|(–ì–µ–æ–ª.–º—É–∑–µ–π)|([–ë–ú].—Å–ø–æ—Ä—Ç.–∑–∞–ª)|(–ò—Å—Ç.–º—É–∑–µ–π)|(–ê–∫—Ç.–∑–∞–ª))))*',
            s)

    def simplify_string(st, f):
        if f not in st:
            raise IndexError(f"In func: simplify_string - {f} not in {st}")
        if f.isdigit() and f not in re.findall(r'\d+', st):
            raise IndexError(f"In func: simplify_string - {f} not in {st}")
        for i in ['–ì–µ–æ–ª.–º—É–∑–µ–π', "–ë.—Å–ø–æ—Ä—Ç.–∑–∞–ª", "–ú.—Å–ø–æ—Ä—Ç.–∑–∞–ª", "–ò—Å—Ç.–º—É–∑–µ–π",
                  "–ê–∫—Ç.–∑–∞–ª"]:  # –ø—Ä–∏–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–æ–≤ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É (–Ω—É–∂–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã –¥–∞–ª–µ–µ)
            if i in st:
                st = re.sub(i, i.lower(), st)

        f = f.lower()
        st = st.replace(' ', '').replace('\n', '')

        if re.search(r'/[A-Z–ê-–Ø–Å]', st):

            x = re.search(r'/[A-Z–ê-–Ø–Å]', st).start()  # –†–∞–∑–¥–µ–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ –¥–≤–µ –ø–æ –æ–±—Ä. —Å–ª—ç—à—É –∏ –±–æ–ª—å—à–æ–π –±—É–∫–≤–µ
            a = st[:x]
            b = st[x + 1:]

            if f.isdigit():
                if f in re.findall(r'\d+', a):
                    return re.match(r'[-A-Z–ê-–Ø–Å_:,.][-a-z–∞-—è—ë_:,.]+', a[:a.index(f)]).group()
                else:
                    return re.match(r'[-A-Z–ê-–Ø–Å_:,.][-a-z–∞-—è—ë_:,.]+', b[:b.index(f)]).group()

            elif f in ['–≥–µ–æ–ª.–º—É–∑–µ–π', "–±.—Å–ø–æ—Ä—Ç.–∑–∞–ª", "–º.—Å–ø–æ—Ä—Ç.–∑–∞–ª", "–∏—Å—Ç.–º—É–∑–µ–π", "–∞–∫—Ç.–∑–∞–ª"]:
                if f in a:
                    return re.match(r'[-A-Z–ê-–Ø–Å_:,.][-a-z–∞-—è—ë_:,.]+', a[:a.index(f)]).group()
                else:
                    return re.match(r'[-A-Z–ê-–Ø–Å_:,.][-a-z–∞-—è—ë_:,.]+', b[:b.index(f)]).group()

        else:
            return re.match(r'[-A-Z–ê-–Ø–Å_:,.][-a-z–∞-—è—ë_:,.]+', st[:st.index(f)]).group()

    if need_class.isdigit() or need_class in ['–ì–µ–æ–ª.–º—É–∑–µ–π', "–ë.—Å–ø–æ—Ä—Ç.–∑–∞–ª", "–ú.—Å–ø–æ—Ä—Ç.–∑–∞–ª", "–ò—Å—Ç.–º—É–∑–µ–π", "–ê–∫—Ç.–∑–∞–ª"]:
        time = []
        klass = []
        # t_r = table.iter_rows()
        for row in table.iter_rows():
            for cell in row:
                if cell.value:
                    s = str(cell.value).replace('\n', '').replace(' ', '')
                    if les_check(s):
                        try:
                            if (simplify_string(s, need_class)):
                                x = ''
                                for i in range(cell.row, max(cell.row - 12, 0), -1):
                                    if table.cell(row=i, column=cell.column).value:
                                        if re.fullmatch(r'\d{1,2}[A-Z–ê-–Ø]',
                                                        table.cell(row=i, column=cell.column).value):
                                            x = table.cell(row=i, column=cell.column).value
                                            break
                                klass.append(f'{simplify_string(s, need_class)} {x}')
                                time.append(str(table.cell(row=cell.row, column=time_cell_coord).value))
                        except:
                            continue
        return sorted(list(map(lambda x, y: [x, y], time, klass)), key=lambda x: x[0])


    def standart_check(a: list[list], klass, yrok, klass_ruk_to):
        times_standart = []
        classes_standart = []
        for i in a:
            if klass_ruk_to != "":
                if (i[-1] is not None and yrok in i[-1]) or (i[-1] is not None and (
                        '–†–∞–∑–≥–æ–≤–æ—Ä—ã –æ –≤–∞–∂–Ω–æ–º' in i[-1] or '–†–æ—Å—Å–∏—è -' in i[-1]) and klass == klass_ruk_to):
                    times_standart.append(i[0])
                    classes_standart.append(i[1])
            else:
                if (i[-1] is not None and yrok in i[-1]):
                    times_standart.append(i[0])
                    classes_standart.append(i[1])
        # print(list(map(lambda x, y: [x, y], times_standart, classes_standart)))
        return list(map(lambda x, y: [x, y], times_standart, classes_standart))



    if need_class in teacher:
        for j in range(len(teacher)):
            if need_class == teacher[j]:
                r = teacher_klass[j]
                s = []
                x = []
                for i in r:

                    to_append = standart_check(xxx(i, sz, id, 0, "", need_class), i, teacher_urok[j], klass_ruk[j])
                    if len(to_append) == 1:
                        if teacher_urok[j] == "–ê–Ω–≥–ª":
                            if "\n" in str(to_append[0][1]):
                                to_append = [[to_append[0][0], str(to_append[0][1])[:str(to_append[0][1]).find("\n")]]]
                                if str(to_append[0][1][-1]) == "/": to_append = [
                                    [to_append[0][0], str(to_append[0][1])[:-1]]]
                        s.append(to_append)  # type: ignore
                    elif len(to_append) == 0:
                        continue
                    else:
                        for t in range(len(to_append)):
                            if teacher_urok[j] == "–ê–Ω–≥–ª":
                                if "\n" in str(to_append[t][1]):
                                    to_append = [
                                        [to_append[j][0], str(to_append[j][1])[:str(to_append[j][1]).find("\n")]]]
                                    if str(to_append[j][1][-1]) == "/": to_append = [
                                        [to_append[j][0], str(to_append[j][1])[:-1]]]
                            s.append([to_append[t]])

                    if len(to_append) == 1:
                        try:
                            for iii in range(5):
                                s[-1][iii][1] = s[-1][iii][1] + f" üìç {i}"
                        except:
                            continue
                    else:
                        for g in range(1, len(to_append) + 1):
                            try:
                                for iii in range(5):
                                    s[-g][iii][1] = s[-g][iii][1] + f" üìç {i}"
                            except:
                                continue
                for i in s:
                    if i:
                        x.append(i[0])

                y = str(x)
                if not ("08:00 - 08:40" in y): x.append(["08:00 - 08:40", ""])
                if not ("08:50 - 09:30" in y) and (
                        "08:50 - 09:30" in y or "09:50 - 10:30" in y or "10:50 - 11:30" in y or "11:50 - 12:30" in y or "12:40 - 13:20" in y or "13:30 - 14:10" in y or "14:30 - 15:10" in y or "15:30 - 16:10" in y or "16:30 - 17:10" in y or "17:20 - 18:00" in y or "18:05 - 18:45" in y): x.append(
                    ["08:50 - 09:30", ""])
                if not ("09:50 - 10:30" in y) and (
                        "09:50 - 10:30" in y or "10:50 - 11:30" in y or "11:50 - 12:30" in y or "12:40 - 13:20" in y or "13:30 - 14:10" in y or "14:30 - 15:10" in y or "15:30 - 16:10" in y or "16:30 - 17:10" in y or "17:20 - 18:00" in y or "18:05 - 18:45" in y): x.append(
                    ["09:50 - 10:30", ""])
                if not ("10:50 - 11:30" in y) and (
                        "10:50 - 11:30" in y or "11:50 - 12:30" in y or "12:40 - 13:20" in y or "13:30 - 14:10" in y or "14:30 - 15:10" in y or "15:30 - 16:10" in y or "16:30 - 17:10" in y or "17:20 - 18:00" in y or "18:05 - 18:45" in y): x.append(
                    ["10:50 - 11:30", ""])
                if not ("11:50 - 12:30" in y) and (
                        "11:50 - 12:30" in y or "12:40 - 13:20" in y or "13:30 - 14:10" in y or "14:30 - 15:10" in y or "15:30 - 16:10" in y or "16:30 - 17:10" in y or "17:20 - 18:00" in y or "18:05 - 18:45" in y): x.append(
                    ["11:50 - 12:30", ""])
                if not ("12:40 - 13:20" in y) and (
                        "12:40 - 13:20" in y or "13:30 - 14:10" in y or "14:30 - 15:10" in y or "15:30 - 16:10" in y or "16:30 - 17:10" in y or "17:20 - 18:00" in y or "18:05 - 18:45" in y): x.append(
                    ["12:40 - 13:20", ""])
                if not ("13:30 - 14:10" in y) and (
                        "13:30 - 14:10" in y or "14:30 - 15:10" in y or "15:30 - 16:10" in y or "16:30 - 17:10" in y or "17:20 - 18:00" in y or "18:05 - 18:45" in y): x.append(
                    ["13:30 - 14:10", ""])
                if not ("14:30 - 15:10" in y) and (
                        "14:30 - 15:10" in y or "15:30 - 16:10" in y or "16:30 - 17:10" in y or "17:20 - 18:00" in y or "18:05 - 18:45" in y): x.append(
                    ["14:30 - 15:10", ""])
                if not ("15:30 - 16:10" in y) and (
                        "15:30 - 16:10" in y or "16:30 - 17:10" in y or "17:20 - 18:00" in y or "18:05 - 18:45" in y): x.append(
                    ["15:30 - 16:10", ""])
                if not ("16:30 - 17:10" in y) and (
                        "16:30 - 17:10" in y or "17:20 - 18:00" in y or "18:05 - 18:45" in y): x.append(
                    ["16:30 - 17:10", ""])
                if not ("17:20 - 18:00" in y) and ("17:20 - 18:00" in y or "18:05 - 18:45" in y): x.append(
                    ["17:20 - 18:00", ""])
                if not ("18:05 - 18:45" in y) and ("18:50 - 19:30" in y): x.append(["18:05 - 18:45", ""])
                x.append(["–ö–æ–Ω–µ—Ü", ""])
            else:
                continue
        x = sorted(x, key=lambda i: i[0])
        if data:
            x = [[data, ""]] + x
        if holydayli:
            x = [[holydayli, ""]] + x
        return x
    else:
        return get_shedule(need_class)

# —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
def time123():
    now = datetime.datetime.now()
    timeprow(now.strftime("%H:%M:%S"))


# —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –Ω—É–∂–Ω–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã wiwid2
def forwiw(s):
    mx = len(s)
    c = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "–ì–µ–æ–ª.–º—É–∑–µ–π", "–ë.—Å–ø–æ—Ä—Ç.–∑–∞–ª", "–ú.—Å–ø–æ—Ä—Ç.–∑–∞–ª", "–∞–∫—Ç.–∑–∞–ª"]
    for i in c:
        if i in s:
            if s.find(i) < mx:
                mx = s.find(i)
    return mx

# —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
@log
def wiwod2(h, id, sz, klass):
    sett = get_settings_from_id(id)
    if h == "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –ø–æ–∫–∞ –Ω–µ—Ç.\n–ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞—Å—Å—ã–ª–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞–ø–∏—Å–∞–≤ /subscribe":
        return "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –ø–æ–∫–∞ –Ω–µ—Ç.\n–ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞—Å—Å—ã–ª–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞–ø–∏—Å–∞–≤ /subscribe"
    if h == "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –ø–æ–∫–∞ –Ω–µ—Ç":
        return "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –ø–æ–∫–∞ –Ω–µ—Ç"
    if h == "–†–∞—Å–ø–∏—Å–∞–Ω–∏e –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç":
        return "–†–∞—Å–ø–∏—Å–∞–Ω–∏e –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    data = ""
    st = ""
    if not (klass.isdigit() or klass in ['–ì–µ–æ–ª.–º—É–∑–µ–π', '–ë.—Å–ø–æ—Ä—Ç.–∑–∞–ª', '–ò—Å—Ç.–º—É–∑–µ–π']):
        if int(str(sett[0][0])[5]) == 1:
            if not (klass in teacher):
                data = h[0]
                h = h[1:]
                h = [[i[0][:i[0].rindex(" ")], i[1]] for i in h]
    else:
        st = f"üìå–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ {klass}\n"
    if int(str(sett[0][0])[2]) == 1:
        if len(klass) < 5:
            st = f"üìå–î–ª—è {klass} –∫–ª–∞—Å—Å–∞\n"
        else:
            st = f"üìå–î–ª—è —É—á–∏—Ç–µ–ª—è: {name_teacher[teacher.index(klass)]}\n"
    if int(str(sett[0][0])[1]) == 1:
        h = h[1:]
    if int(str(sett[0][0])[0]) == 0:
        gag = 1
    else:
        gag = 0

    chto = ["–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞", "–æ–º–µ—Ç—Ä–∏—á–∏—Å–∫–∏—Ö –∑–∞–¥–∞", "—Ñ–∏–∑–∏—á–µ—Å", "–í—Å–µ–æ–±—â–∞—è –∏—Å—Ç–æ—Ä–∏—è", "–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É",
            "–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫", "–ò–∑–æ–±—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ–µ", "–†–æ–¥–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–§–∏–∑–∏–∫–∞ –≤ –∑–∞–¥–∞—á–∞—Ö", "–†–æ–¥–Ω–æ–π —è–∑—ã–∫",
            "–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏", "–í—Å–µ–æ–±—â–∞—è –∏—Å—Ç–æ—Ä–∏—è", "–ë–∏–æ–ª–æ–≥–∏—è –≤ –∑–∞–¥–∞—á–∞—Ö", "–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç", "–∏–º–µ–Ω–µ–Ω–∏–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö",
            "–æ—Å—Å–∏—è - –º–æ–∏", "WEB", "–û—Å–Ω–æ–≤—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∏", "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å", "–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á", "—Ä–µ—à–µ–Ω–∏—é —Ñ–∏–∑ –∑–∞–¥–∞—á",
            "–û—Å–Ω–æ–≤—ã –¥—É—Ö–æ–≤–Ω–æ-–Ω—Ä–∞–≤—Å—Ç–≤–µ–Ω–Ω–æ–π", "—Ö–∏–º–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á", "–û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è"]
    nachto = ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–ì–µ–æ–º–µ—Ç—Ä–∏—è", "–§–∏–∑–∏–∫–∞", "–ò—Å—Ç–æ—Ä–∏—è", "–§–∏–∑-—Ä–∞", "–ì–µ–æ–º–µ—Ç—Ä–∏—è", "–ò–ó–û", "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–§–∏–∑–∏–∫–∞",
              "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", "–ò—Å—Ç–æ—Ä–∏—è", "–ò—Å—Ç–æ—Ä–∏—è", "–ë–∏–æ–ª–æ–≥–∏—è —Å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–º–∏", "–ò–Ω–¥–∏–≤. –ø—Ä–æ–µ–∫—Ç", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
              "–†–ú–ì", "WEB-—Ä–∞–∑—Ä–∞–±. –∏ –±–¥", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–í–µ—Ä. –∏ —Å—Ç–∞—Ç.", "–ë–∏–æ–ª–æ–≥–∏—è", "–§–∏–∑–∏–∫–∞", "–û–î–ö–ù–†", "–•–∏–º–∏—è",
              "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"]
    c = ["4", "3", "2", "1", "5", "6", "7", "8", "9", "0", "–ì–µ–æ–ª.–º—É–∑–µ–π", "–ë.—Å–ø–æ—Ä—Ç.–∑–∞–ª", "–ú.—Å–ø–æ—Ä—Ç.–∑–∞–ª", "–∞–∫—Ç.–∑–∞–ª",
         "–ò—Å—Ç.–º—É–∑–µ–π"]
    for i in range(len(h)):
        st += str((h[i])[0])
        strok = str((h[i])[1])

        if strok != "None":
            flag = True
            for dd in c:
                if dd in strok and strok:
                    flag = False
                    break
            if flag:
                st += " " + strok + "\n"

        if strok == "None":
            st = st + " None" + "\n"
        if "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫" in strok:
            strok = strok[:strok.find("–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫")] + "–ê–Ω–≥–ª.—è–∑" + strok[(strok.find("–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫") + 15):]
            if "\n" in strok:
                strok = strok[:strok.find("\n")] + strok[(strok.find("\n") + 1):]
        if "–ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫" in strok:
            strok = strok[:strok.find("–ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫")] + "–ù–µ–º.—è–∑ " + strok[(strok.find("–ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫") + 13):]
            if "\n" in strok:
                strok = strok[:strok.find("\n")] + strok[(strok.find("\n") + 2):]
        if forwiw(strok):
            for j in c:
                if j in str(strok):
                    if not (klass.isdigit() or klass in ['–ì–µ–æ–ª.–º—É–∑–µ–π', '–ë.—Å–ø–æ—Ä—Ç.–∑–∞–ª', '–ò—Å—Ç.–º—É–∑–µ–π']):
                        st += " "
                        est = str(strok)[:forwiw(strok)]
                        for t in range(len(chto)):
                            if chto[t] in est and gag:
                                est = nachto[t]
                        kab = str(strok)[forwiw(strok):]
                        st += est + " " + kab
                        st += "\n"
                        break
                    else:
                        st += " "
                        est = str(strok)[:forwiw(strok)]
                        for t in range(len(chto)):
                            if chto[t] in est and gag:
                                est = nachto[t]
                        kab = str(strok)[forwiw(strok):]
                        st += est + " || " + kab
                        st += "\n"
                        break
    st = st.replace("  ", " ")
    if not (klass.isdigit() or klass in ['–ì–µ–æ–ª.–º—É–∑–µ–π', '–ë.—Å–ø–æ—Ä—Ç.–∑–∞–ª', '–ò—Å—Ç.–º—É–∑–µ–π']):
        if int(str((sett)[0][0])[4]) == 1:
            pass  # st = ciferki(st, klass)
        if int(str(sett[0][0])[5]) == 1 and not (klass in teacher):
            if data:
                st = str(data[0]) + "\n" + st.replace("- ", "")
            st = st.replace("- ", "")
        if int(str(sett[0][0])[6]) == 1 and klass in teacher:
            zamens = teacher_urok_for_zam[teacher.index(klass)]
            for i in range(len(zamens)):
                st = st.replace(zamens[i], "–∫–∞–±.")
    else:
        pod_zam = ["/" + str(lkj) for lkj in range(3, 60)] + [str(jkl) + "/" for jkl in range(3, 60)]
        for zam in pod_zam:
            st = st.replace(f"{zam}", " ")
            st = st.replace("  ", " ")
        st = st.replace("|| ||", "||")

    if gag:
        st = st.replace("–†–∞–∑–≥–æ–≤–æ—Ä—ã –æ –≤–∞–∂–Ω–æ–º", "–†–∞–∑–≥. –æ –≤–∞–∂–Ω.")
    if "=" in st:
        print("=")
        st = st + "\n‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–£ –Ω–∞—Å –æ—à–∏–±–∫–∞, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤—Ä—É—á–Ω—É—é, –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ /givemetoday, –Ω–∞ –∑–∞–≤—Ç—Ä–∞ /givemetomorrow‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è"
        st = st.replace("=", "err")
        st = st.replace("$", "err")
    return st


def reboot():
    clear_log()
    os.system("sudo reboot")

def planreboot():
    time.sleep(14500)
    reboot()


# —Ñ—É–Ω–∫—Ü–∏—è —Å—á–∏—Ç–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@log
def count_users():
    conn = sqlite3.connect('userdate.db')
    cursor = conn.cursor()
    cursor.execute("SELECT COUNT(*) FROM userdata WHERE usertelegramid > 0")
    count = cursor.fetchone()[0]
    conn.close()
    return count


# —Ñ—É–Ω–∫—Ü–∏—è —Å—á–∏—Ç–∞–µ—Ç –≥—Ä—É–ø–ø—ã
@log
def count_grupp():
    conn = sqlite3.connect('userdate.db')
    cursor = conn.cursor()
    cursor.execute("SELECT COUNT(*) FROM userdata WHERE usertelegramid < 0")
    count = cursor.fetchone()[0]
    conn.close()
    return count


# —Ñ—É–Ω–∫—Ü–∏—è —Å—á–∏—Ç–∞–µ—Ç active –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@log
def active_users():
    conn = sqlite3.connect('userdate.db')
    cursor = conn.cursor()
    cursor.execute("SELECT COUNT(*) FROM userdata WHERE active > 0")
    # cursor.execute(f"UPDATE userdata SET active=1 WHERE usertelegramid=?", (id,))
    count = cursor.fetchone()[0]
    conn.close()
    return count


# Define a function to delete a user
def delete_user(user_id):
    cursor.execute("DELETE FROM userdata WHERE usertelegramid=?", (user_id,))
    conn.commit()
    print("User deleted successfully")


def zachem(id):
    if zachem_id(id).count(id) >= 16:
        bot.send_message(id, zachem_message)
        print("send")
        zachem_id(id, 1)
        print("send")


# —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def add_user(user_name, user_school_class):
    if get_user_info(user_name):
        zachem(user_name)
        cursor.execute('UPDATE userdata SET class=? WHERE usertelegramid=?', (user_school_class, user_name))
        conn.commit()
        return
    with conn:
        cursor.execute("INSERT INTO userdata (usertelegramid, class) VALUES (?, ?)", (user_name, user_school_class))
        print("User added successfully")


# –ø—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def get_user_info(user_telegram_id: str):
    cursor.execute('SELECT * FROM userdata WHERE usertelegramid = ?', (user_telegram_id,))
    row = cursor.fetchone()
    if row is not None:
        return True
    else:
        return False


# –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_class_from_id(user_id: str):
    cursor.execute('SELECT * FROM userdata WHERE usertelegramid =?', (user_id,))
    row = cursor.fetchone()
    if row is not None:
        return row[2]
    else:
        return 'error'


# get temp cpu (only for paspberry pi)
def get_cpu_temperature():
    res = os.popen('vcgencmd measure_temp').readline()
    return float(res.replace("temp=", "").replace("'C", ""))


# –±–ª–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª—ã
def say(s=""):
    if len(s) != 0:
        f = open("say.txt", "w")
        f.write(s)
        return None
    elif s == "":
        f = open("say.txt", "r")
        y = f.readline()
        return ("" if y == "~%~$~~!" else y)
    else:
        return None


def timeprow(s=""):
    if len(s) != 0:
        f = open("time.txt", "w")
        f.write(s)
        return None
    elif s == "":
        f = open("time.txt", "r")
        y = f.readline()
        return ("" if y == "~%~$~~!" else y)
    else:
        return None


def nametab(s=""):
    if len(s) != 0:
        f = open("name.txt", "w")
        f.write(s)
        return None
    elif s == "":
        f = open("name.txt", "r")
        y = f.readline()
        return ("" if y == "~%~$~~!" else y)
    else:
        return None


def date(s=""):
    if len(s) != 0:
        f = open("date.txt", "w")
        f.write(s)
        return None
    elif s == "":
        f = open("date.txt", "r")
        y = f.readline()
        return ("" if y == "~%~$~~!" else y)
    else:
        return None


def date0(s=""):
    if len(s) != 0:
        f = open("date0.txt", "w")
        f.write(s)
        return None
    elif s == "":
        f = open("date0.txt", "r")
        y = f.readline()
        return ("" if y == "~%~$~~!" else y)
    else:
        return None


def date1(s=""):
    if len(s) != 0:
        f = open("date1.txt", "w")
        f.write(s)
        return None
    elif s == "":
        f = open("date1.txt", "r")
        y = f.readline()
        return ("" if y == "~%~$~~!" else y)
    else:
        return None


def date2(s=""):
    if len(s) != 0:
        f = open("date2.txt", "w")
        f.write(s)
        return None
    elif s == "":
        f = open("date2.txt", "r")
        y = f.readline()
        return ("" if y == "~%~$~~!" else y)
    else:
        return None


def done(s=""):
    if len(s) != 0:
        f = open("done.txt", "w")
        f.write(str(s))
        return None
    elif s == "":
        f = open("done.txt", "r")
        y = f.readline()
        return ("" if y == "qwe" else y)
    else:
        return None


def komy(s=""):
    if len(s) != 0:
        f = open("komy.txt", "w")
        f.write(str(s))
        return None
    elif s == "":
        f = open("komy.txt", "r")
        y = f.readline()
        return int("1" if y == "000" else y)
    else:
        return None


@log
def zachem_id(s=0, w=0):
    if s != 650093184:
        f = open("zachem_id.txt", "r+")
        y = f.readline()
        s = str(s)
        if w:
            f.close()
            f = open("zachem_id.txt", "w")
            y = list(map(int, y.split()))
            y = list(set(y))
            stt = ""
            for i in y:
                stt += str(i)
                stt += " "
            y = stt
            f.write(y)
            return 1
        if s != "0":
            f.write(" " + str(s))
        y = y.replace("  ", " ")
        y = list(map(int, y.split()))
        return ("1" if y == "000" else y)
    return [0]


def subscribers(s=""):
    if len(s) != 0:
        f = open("subscribers.txt", "r+")
        f.write(str(subscribers()) + " " + str(s))
        return None
    elif s == "":
        f = open("subscribers.txt", "r")
        y = f.readline()
        return ("1" if y == "000" else y)
    else:
        return None


def unsubscribers(id=""):
    s = str(subscribers())
    if len(id) != 0:
        f = open("subscribers.txt", "w")
        s = s.replace("  ", " ")
        x = s.replace(id, "")
        f.write(x)
        return None
    else:
        return "Error"


def admins(s=""):
    if len(s) != 0:
        f = open("admins.txt", "r+")
        f.write(str(admins()) + " " + str(s))
        return None
    elif s == "":
        f = open("admins.txt", "r")
        y = f.readline()
        return ("1" if y == "000" else str(y))
    else:
        return None


def unadmins(id=""):
    s = str(admins())
    if len(id) != 0:
        f = open("admins.txt", "w")
        s = s.replace("  ", " ")
        x = s.replace(id, "")
        f.write(x)
        return None
    else:
        return "Error"


@log
def sendtome(s):
    bot.send_message(650093184, f"{s}")
    return str(650093184) + f"{s}"


@log
def sendto(id, s):
    bot.send_message(id, f"{s}")
    return str(id) + f"{s}"


def version():
    s = ""
    list = [
        "Ver1.0 - —Ä–µ–ª–∏–∑–Ω–∞—è –≤–µ—Ä—Å–∏—è, —Å 15.04.23 –ø–æ 15.05.23\n–ò–º–µ–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏: –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ –±—É–∫–≤–∞_–Ω–æ–º–µ—Ä—É –∫–ª–∞—Å—Å–∞, —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏–≤—è–∑–∫–∏ /–±—É–∫–≤–∞_–Ω–æ–º–µ—Ä, /start, /help, /info, /getmyid, /rasp, /authors, –∞ —Ç–∞–∫ –∂–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∏ –≤—ã–≤–æ–¥–∞ –¥–∏–Ω–º–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
        "Ver1.1 - —Å 15.05.23 –ø–æ 31.08.23\n–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: /version, –Ω–µ–∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞, —É–ª—É—á—à–µ–Ω–∏–µ –µ–≥–æ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏, –∏–∑–º–µ–Ω–µ–Ω–∏–µ wiwod –Ω–∞ wiwod2 (–ø—Ä–æ–±–µ–ª—ã –ø–µ—Ä–µ–¥ –∫–∞–±–∏–Ω–µ—Ç–æ–º), —É–ø—Ä–æ—â–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ–π —Å–º–µ–Ω—ã –æ–±–æ—Ä—É–¥–≤–∞–Ω–∏—è, –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤: https://t.me/sg130testbot, –Ω–æ–≤–∞—è —Ñ-–∏—è prow2 –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏—è –≤ 4 —Ä–∞–∑–∞",
        "Ver2.0 - —Å 31.08.23 –ø–æ —Å–µ–≥–æ–¥–Ω—è\n–ü–µ—Ä–µ–µ–∑–¥ –±–æ—Ç–∞ —Å —Å–µ—Ç–µ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–∞ —Å–∞–º–æ–æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ, —É—Ç—Ä–∞—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–π polling() –∏ prow2() –∑–∞ –Ω–µ–Ω–∞–¥–æ–±–æ—Å—Ç—å—é.\n–î–æ–±–∞–≤–ª–µ–Ω–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ /subscribe –∏ /unsubscribe, –∞–¥–º–∏–Ω—ã —Ç–µ–ø–µ—Ä—å –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ /info, –¥–æ–±–∞–≤–ª–µ–Ω–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç, –º–æ–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∞—Ç—å –∏ —Å–Ω–∏–º–∞—Ç—å —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π –∞–¥–º–∏–Ω–æ–≤, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–∑–Ω–∞—Ç—å –∫—Ç–æ –∞–¥–º–∏–Ω, —Ç–∞–∫ –∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∞ –ø–æ –¥–Ω—è–º (—Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞).\n–î–æ–±–∞–≤–ª–µ–Ω–Ω–∞ mute\\unmute –∏ remove –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –≤—Ä—É—á–Ω—É—é, —Ç–∞–∫ –∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–≤—Ç–æ-–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è —Å –ø—Ä–∞–∑–¥–Ω–∏–∫–∞–º–∏\n–ê –µ—â—ë —É –Ω–∞—Å –≤—á–µ—Ä–∞ –≤—ã—à–µ–ª –∏–∑ —Å—Ç—Ä–æ—è —Å–µ—Ä–≤–µ—Ä –∏ –º—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –±–¥ :("]
    for i in list:
        s += i + "\n" + "\n"
    return s


# —Ñ—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã help
def helptext(s):
    otvet = ""
    admin = list(map(int, str(admins()).split()))
    text = ["11–ë - —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ 11–ë –∫–ª–∞—Å—Å–∞", "11–ë+ - —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ 11–ë –∫–ª–∞—Å—Å–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞",
            "11-   - –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ–π –ø–∞—Ä–∞–ª–µ–ª–∏", "11-+   - –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ–π –ø–∞—Ä–∞–ª–µ–ª–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞",
            "/11–ë - —á—Ç–æ –±—ã –ø—Ä–∏–≤—è–∑–∞—Ç—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –∫ 11–ë –∫–ª–∞—Å—Å—É", "/subscribe - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è",
            "/unsubscribe - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è", "/info - –ø–æ–ª—É—á–∏—Ç—å –æ–±—â—É—é –∏–Ω–æ—Ä–º–∞—Ü–∏—é",
            "/settings - –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤—ã–≤–æ–¥–∞", "/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞, —É–≤–∏–¥–µ—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
            "/help - –≤—ã–∑–≤–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É (—ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)", "/getmyid - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –∞–π–¥–∏ —á–∞—Ç–∞",
            "/version - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤–µ—Ä—Å–∏–π", "/authors - —á—Ç–æ –±—ã —É–≤–∏–¥–µ—Ç—å –∏–º–µ–Ω–∞ –∞–≤—Ç–æ—Ä–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞",
            "/donat - –∞–¥–º–∏–Ω—É –Ω–∞ –ø–µ—á–µ–Ω—å–∫–∏ (–Ω–∞ –ø–æ—á–∏–Ω–∫—É —Å–µ—Ä–≤–µ—Ä–∞, —á—Ç–æ –±—ã –±–æ—Ç –±—ã–ª –æ–Ω–ª–∞–π–Ω 24/7)"]
    textforadm = [
        ">say< - –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, —É–∫–∞–∑–∞–Ω–Ω–æ–µ –ø–æ—Å–ª–µ –ø—Ä–æ–±–µ–ª–∞, –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ—Ç –±–æ—Ç–∞ (say no –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤—ã–≤–æ–¥–∞ —ç—Ç–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)",
        ">sudo reboot< - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä, –µ—Å–ª–∏ –æ–Ω –æ–Ω–ª–∞–π–Ω",
        ">whoisadmin< –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤",
        ">adm XXXXXXXXXX<, –≥–¥–µ –≤—Å–µ X –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∞–π–¥–∏ –ø–æ–ª—å–∑–∞–≤–∞—Ç–µ–ª—è - —á—Ç–æ –±—ã —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º",
        ">unadm XXXXXXXXXX<, –≥–¥–µ –≤—Å–µ X –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∞–π–¥–∏ –ø–æ–ª—å–∑–∞–≤–∞—Ç–µ–ª—è - —á—Ç–æ –±—ã —Ä–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å –µ–≥–æ –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤",
        ">remove X.xlsx< - –≥–¥–µ X.xlsx –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ –≤—Å–µ—Ö –ø–∞–ø–æ–∫ —Å–∏—Å—Ç–µ–º—ã, –∏—Å–ø–æ–ª—å–∑–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è",
        ">mute X< - –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è (–±–æ—Ç –±—É–¥–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≥–ª—É—à–∫—É —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø—Ä–∏—á–∏–Ω—ã X) X - –ø—Ä–∏—á–∏–Ω–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è",
        ">unmute< - –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è",
        "üóì–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—ë –±–æ—Ç—É —Å –∞–∫–∫–∞—É–Ω—Ç–∞, –∏–º–µ—é—â–µ–≥–æ –ø—Ä–∞–≤–∞ –∞–¥–∏–º–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –¢–∞–±–ª–∏—Ü–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ, –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –¥–∞–ª—å—à–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–Ω–æ —á—Ç–æ —É–≥–æ–¥–Ω–æ"]
    for i in range(len(text)):
        otvet += text[i]
        otvet += "\n"
    if s in admin:
        otvet += "***–í—Å—ë —É–∫–∞–∑–∞–Ω–Ω–æ–µ –¥–∞–ª–µ–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –≤—ã –±—É–¥–∏—Ç–µ –ø–∏—Å–∞—Ç—å —ç—Ç–æ —Å –∞–∫–∫–∞—É–Ω—Ç–∞, –∏–º–µ—é—â–µ–≥–æ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—ç—Ç–æ–≥–æ)***\n"
        for j in range(len(textforadm)):
            otvet += textforadm[j]
            otvet += "\n"
    return otvet


@log
def mailing(name=""):
    list = map(int, str(subscribers()).split())
    for i in list:
        # time.sleep(0.1)
        try:
            if len(say()) != 0: bot.send_message(i, say())  # type: ignore
            bot.send_message(i, str(wiwod2(xxx(get_class_from_id(f'{i}'), 2, i, 0, name), i, 2,
                                           get_class_from_id(f'{i}'))))
            setactive(i)
        except:
            logf.write(f"[{datetime.datetime.now().strftime('%d/%m/%y %H:%M:%S')}] EXCEPT IN mailing WITH {i}\n")
            continue
    return "norm status"


def mute(s="–Ω–µ —É–∫–∞–∑–∞–Ω–∞"):
    if s == "–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞":
        f = open("mute.txt", "r")
        y = f.readline()
        if len(y) < 5:
            return 0
        else:
            return 1
    else:
        if len(s) != 0:
            f = open("mute.txt", "w")
            f.write(str(s))
            return None
        elif s == "":
            f = open("mute.txt", "r")
            y = f.readline()
            return ("" if y == "del" else y)
        else:
            return None


def setactive(id):
    cursor.execute(f"UPDATE userdata SET active=1 WHERE usertelegramid=?", (id,))
    conn.commit()


def make_unactive(s=""):
    now = datetime.datetime.now()
    if now.strftime("%HH") == "00" or now.strftime("%HH") == 00:
        cursor.execute(f"UPDATE userdata SET active=0")
        conn.commit()
    if s != "":
        cursor.execute(f"UPDATE userdata SET active=0")
        conn.commit()


def ban(user_id):
    if not (int(user_id) in list(map(int, str(admins()).split()))) or not (user_id == 650093184):
        current_time_now = time.time()
        if user_id in spam_count:
            if spam_count[user_id]["count"] >= SPAM_LIMIT:
                if current_time_now - spam_count[user_id]["last_time"] < SPAM_TIME_LIMIT:
                    if int(user_id) in list(map(int, str(admins()).split())) or user_id == 650093184:
                        pass
                    else:
                        return 1
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_id in spam_count:
            spam_count[user_id]["count"] += 1
            spam_count[user_id]["last_time"] = current_time_now
        else:
            spam_count[user_id] = {"count": 1, "last_time": current_time_now}


def vasiliev(name):
    global kyda
    f = open(f"{kyda}{name}.xlsx", "rb")
    bot.send_document(650093184, f)
    f.close
    f = open(f"{kyda}{name}.xlsx", "rb")
    bot.send_document(650093184, f)
    f.close


@log
def givexlsx(id, sz):
    if sz:
        szsz = "–∑–∞–≤—Ç—Ä–∞"
    else:
        szsz = "—Å–µ–≥–æ–¥–Ω—è"
    if sz:
        try:
            skip = 1
            if int(datetime.datetime.today().weekday()) == 4:
                skip = 3
            elif int(datetime.datetime.today().weekday()) == 5:
                skip = 2
            name = (datetime.date.today() + datetime.timedelta(days=skip)).strftime('%d.%m.%Y')
        except:
            return "–£ –Ω–∞—Å –æ—à–∏–±–∫–∞!"
    else:
        try:
            name = (datetime.date.today()).strftime('%d.%m.%Y')
        except:
            return "–£ –Ω–∞—Å –æ—à–∏–±–∫–∞!"
    try:
        get_files = os.listdir(kyda)
        if f"{name}.xlsx" in get_files:
            f = open(f"{kyda}{name}.xlsx", "rb")
            bot.send_document(id, f)
            f.close
        else:
            return f"–£ –Ω–∞—Å –Ω–µ—Ç —Ä–∞—Å—Å–∏—Å–∞–Ω–∏—è –Ω–∞ {szsz}"
    except:
        return "–£ –Ω–∞—Å –æ—à–∏–±–∫–∞!"
    return "–£—Å–ø–µ—à–Ω–æ!"


@log
def who_is_izm():
    b = []
    s = []
    a = teacher + ['5–ê', '5–ë', '5–í', '5–ì', '5–î', '5–ï', '6–ê', '6–ë', '6–í', '6–ì', '6–î', '6–ï',
                   '7–ê', '7–ë', '7–í', '7–ì', '7–î', '7–ï', '8–ê', '8–ë', '8–í', '8–ì', '8–î', '8–ï', '9–ê', '9–ë', '9–í', '9–ì', '9–î',
                   '9–ï',
                   '10–ê', '10–ë', '10–í', '10–ì', '10–î', '10–ï', '11–ê', '11–ë', '11–í', '11–ì', '11–î', '11–ï']
    for i in a:
        try:
            x = xxx(i, 2, 1)
            time.sleep(0.1)
            y = xxx(i, 2, 1, 1)
            if x == y:
                continue
            else:
                b.append(i)
        except:
            continue
    for j in b:
        cursor.execute(f"SELECT usertelegramid FROM userdata WHERE class=?", (j,))
        s.append(cursor.fetchall())
    os.remove(f"{kyda}1.xlsx")
    g = [j[0] for i in s for j in i]
    try:
        bot.send_message(650093184, str(f"{b}"))
    except:
        pass
    try:
        bot.send_message(650093184, str(f"{g}"))
    except:
        pass
    return g


@log
def izm(x):
    y = list(map(int, subscribers().split()))
    for i in x:
        if int(i) in y:
            time.sleep(0.1)
            try:
                bot.send_message(i, "‚ùóÔ∏è–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è‚ùóÔ∏è\n" + str(
                    wiwod2(xxx(get_class_from_id(f'{i}'), 2, i), i, 2, get_class_from_id(f'{i}'))))
                setactive(i)
            except:
                continue
    return "OK"


def send_to_class(id, s=""):
    a = []
    cursor.execute(f"SELECT usertelegramid FROM userdata WHERE class=?", (id,))
    a.append(cursor.fetchall())
    y = list(map(int, subscribers().split()))
    g = [i[0] for i in a[0]]
    if s:
        st = s
    else:
        st = str(wiwod2(xxx(get_class_from_id(f'{i}'), 2, i), i, 2, get_class_from_id(f'{i}')))
    for i in g:
        if int(i) in y:
            time.sleep(0.1)
            try:
                bot.send_message(i, st)
                setactive(i)
            except:
                continue


def delete_lost():
    get_files = os.listdir(kyda)
    for i in range(5, 12):
        name_lost = (datetime.date.today() - datetime.timedelta(days=i)).strftime('%d.%m.%Y')
        if name_lost in get_files:
            os.remove(kyda + name_lost + ".xlsx")


# —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ª–æ–≤–∞ "done" –ø–æ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def send_done(ID):
    bot.send_message(ID, 'done')


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—É—á–µ–Ω—ã—Ö –±–æ—Ç–æ–º
@bot.message_handler(content_types=['document'])
def handle_docs(message):
    if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
        if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
            bot.send_message(message.chat.id,
                             f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
        else:
            bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
            return "mute"
    else:
        if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
            try:
                file_info = bot.get_file(message.document.file_id)
                downloaded_file = bot.download_file(file_info.file_path)
                src = otkyda + message.document.file_name
                with open(src, 'wb') as new_file:
                    new_file.write(downloaded_file)
                nametab(message.document.file_name)
                now = datetime.datetime.now()
                timeprow(now.strftime("%H:%M:%S"))
                bot.reply_to(message, "–ü—Ä–∏–Ω—è—Ç–æ")
                #  –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª

                f = f"{otkyda}{str(message.document.file_name)}"
                off = f"{kyda}{date0()}.xlsx"
                fff = f"{kyda}"
                flag_izm = 0
                get_files_2 = os.listdir(kyda)
                name = str(message.document.file_name)[:10]
                """"""
                if name[-1] == " ":
                    name = name[:-1]
                    if re.fullmatch(r'\d{2}', name[2:]) is None:
                        name = "0" + name
                """"""
                if f"{date0()}.xlsx" in get_files_2: os.remove(off)
                ff = f"{otkyda}{name}.xlsx"
                get_files1 = os.listdir(otkyda)
                if f"{name}.xlsx" in get_files1: os.remove(f"{otkyda}{name}.xlsx")
                os.rename(f, ff)
                if f"{name}.xlsx" in get_files_2:
                    flag_izm = 1
                    os.rename(f"{kyda}{name}.xlsx", f"{kyda}1.xlsx")
                shutil.move(ff, fff)
                try:
                    vasiliev(name)
                except:
                    bot.send_message(650093184, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –í–∞—Å–∏–ª—å–µ–≤–µ")
                delete_lost()
                if flag_izm:
                    izm(who_is_izm())
                    print(f"done izm")
                    bot.reply_to(message, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ")
                else:
                    date0(str(date1()))
                    date1(str(date2()))
                    date2(name)
                    try:
                        mailing(name)
                    except:
                        pass

            except Exception as e:
                bot.reply_to(message, e)  # type: ignore
                bot.send_message(650093184, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n{e}")  # type: ignore
        else:
            bot.send_message(650093184, str(message.from_user.id))
            bot.forward_message(650093184, message.chat.id, message.id)
            if message.chat.id > 0: bot.send_message(message.chat.id, "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—É—á–µ–Ω—ã—Ö –±–æ—Ç–æ–º
@bot.message_handler(commands=['start'])
def start(message):
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"

        if message.chat.id < 0:
            bot.send_message(message.chat.id,
                             '–î–ª—è –≥—Ä—É–ø–ø —Ä–∞–±–æ—Ç–∞—é—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≤—ã–∑–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º "/today" –∏ "/tomorrow"')
        else:
            if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–ù–∞ —Å–µ–≥–æ–¥–Ω—è")
            btn2 = types.KeyboardButton("–ù–∞ –∑–∞–≤—Ç—Ä–∞")
            markup.add(btn1, btn2)
            bot.send_message(message.chat.id,
                             text="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏—è —Å —Å–∞–π—Ç–∞ sg, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ –±–æ–ª–µ–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ 20 —Å–µ–∫—É–Ω–¥, –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ - /help".format(
                                 message.from_user), reply_markup=std_keyboard)
            bot.send_message(message.chat.id,
                             "–í–Ω–∏–º–∞–Ω–∏–µ! –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —á—Ç–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞–∫-—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ, –ø—Ä–æ–≤–µ—Ä—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º, –±–æ—Ç –Ω–µ —Å–æ–≤–µ—Ä—à–Ω–µ–Ω –∏ –º–æ–∂–µ—Ç –æ—à–∏–±–∏—Ç—å—Å—è")
            bot.send_message(message.chat.id, "–ï—Å–ª–∏ –≤—ã —É–≤–∏–¥–∏—Ç–µ —Å–µ—Ä—å—ë–∑–Ω—É—é –æ—à–∏–±–∫—É - –ø–∏—à–∏—Ç–µ —Å—é–¥–∞: https://t.me/gaming_raspredval")
            bot.send_message(message.chat.id,
                             "–î–æ–±–∞–≤–ª—è—è –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É tg, –Ω—É–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤—è–∑–∫–∏ –∏ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–æ–≤–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞")


@bot.message_handler(commands=['help'])
def help(message):  # type: ignore
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"

        if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
        btn1 = types.KeyboardButton("–ù–∞ —Å–µ–≥–æ–¥–Ω—è")
        btn2 = types.KeyboardButton("–ù–∞ –∑–∞–≤—Ç—Ä–∞")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, helptext(message.chat.id))


@bot.message_handler(commands=['today'])
def today(message):  # type: ignore
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"

        if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
        setactive(message.from_user.id)
        if len(say()) != 0: bot.send_message(message.from_user.id, say())  # type: ignore
        # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if get_user_info(f'{message.chat.id}'):
            bot.send_message(message.chat.id,
                             str(wiwod2(xxx(get_class_from_id(f'{message.chat.id}'), 1, message.chat.id),
                                        message.chat.id, 1, get_class_from_id(f'{message.chat.id}'))))
        else:
            bot.send_message(message.chat.id,
                             "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –∫–ª–∞—Å—Å —Ç–µ–∫—Å—Ç–æ–º –≤ —á–∞—Ç–µ —Å —É–∫–∞–∑–∞–Ω–∏–º —Å–ª—ç—à–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫: /11–ë")


@bot.message_handler(commands=['tomorrow'])
def tomorrow(message):  # type: ignore
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"

        if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
        setactive(message.from_user.id)
        if len(say()) != 0: bot.send_message(message.from_user.id, say())  # type: ignore
        # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if get_user_info(f'{message.chat.id}'):
            bot.send_message(message.chat.id,
                             str(wiwod2(xxx(get_class_from_id(f'{message.chat.id}'), 2, message.chat.id),
                                        message.chat.id, 2, get_class_from_id(f'{message.chat.id}'))))
        else:
            bot.send_message(message.chat.id,
                             "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –∫–ª–∞—Å—Å —Ç–µ–∫—Å—Ç–æ–º –≤ —á–∞—Ç–µ —Å —É–∫–∞–∑–∞–Ω–∏–º —Å–ª—ç—à–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫: /11–ë")


@bot.message_handler(commands=['settings'])
def settings(message):  # type: ignore
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"
        settin = str(get_settings_from_id(message.chat.id))
        settin = settin[settin.find("'") + 1:settin.rfind("'")]
        if message.chat.id < 0:
            bot.send_message(message.chat.id,
                             f'–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ–π—á–∞—Å: {settin}\n\n–ß—Ç–æ –±—ã —É–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /XXXXXXXX –≥–¥–µ –∫–∞–∂–¥—ã–π X –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–∞(1)/–Ω–µ—Ç(0) –Ω–∞ –≤–æ–ø—Ä–æ—Å –¥–∞–ª–µ–µ (–ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ 8 —Å–∏–º–≤–æ–ª–æ–≤, –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –º–µ–Ω—å—à–µ —á–µ–º 8, —Ç–æ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—Ç–µ –≤ –∫–æ–Ω—Ü–µ –Ω—É–ª–∏, —Ç–∞–∫, —á—Ç–æ –±—ã –≤ –∏—Ç–æ–≥–µ –±—ã–ª–æ 8 —Å–∏–º–≤–æ–ª–æ–≤, "/" - –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!):\n\n1Ô∏è‚É£ –ù—É–∂–Ω–æ –ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ø–æ–ª–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –±–µ–∑ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π?\n\n2Ô∏è‚É£–û—Ç–∫–ª—é—á–∏—Ç—å –≤—ã–≤–æ–¥ –¥–∞—Ç—ã (—à–∞–ø–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è)?\n\n3Ô∏è‚É£ –í—ã–≤–æ–¥–∏—Ç—å –ª–∏ –∫–ª–∞—Å—Å, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?\n\n4Ô∏è‚É£–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏?\n\n5Ô∏è‚É£–í—ã–≤–æ–¥–∏—Ç—å –ª–∏ –Ω–æ–º–µ—Ä —É—Ä–æ–∫–∞? (–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π, —Å–¥–µ–ª–∞–µ–º –ø–æ –∑–∞–ø—Ä–æ—Å—É)\n\n6Ô∏è‚É£–°–æ–∫—Ä–∞—â–∞—Ç—å –ª–∏ –≤—ã–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ —É—Ä–æ–∫–æ–≤? (–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π, —Å–¥–µ–ª–∞–µ–º –ø–æ –∑–∞–ø—Ä–æ—Å—É)\n\n7Ô∏è‚É£–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π: –æ—Ç–∫–ª—é—á–∏—Ç—å –ª–∏ –≤—ã–≤–æ–¥ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –¥–ª—è –≤–∞—Å —É—Ä–æ–∫–∞? (–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫—É –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å "—É—Ä–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", –Ω–æ –≤–æ—Ç –≤—Å–µ –∫–ª–∞—Å—Å–Ω—ã–µ —á–∞—Å—ã –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫ –æ–±—ã—á–Ω–æ, —á—Ç–æ –±—ã –∫ –Ω–∏–º –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è)')
        else:
            if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
            bot.send_message(message.chat.id,
                             f'–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ–π—á–∞—Å: {settin}\n\n–ß—Ç–æ –±—ã —É–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /XXXXXXXX –≥–¥–µ –∫–∞–∂–¥—ã–π X –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–∞(1)/–Ω–µ—Ç(0) –Ω–∞ –≤–æ–ø—Ä–æ—Å –¥–∞–ª–µ–µ (–ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ 8 —Å–∏–º–≤–æ–ª–æ–≤, –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –º–µ–Ω—å—à–µ —á–µ–º 8, —Ç–æ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—Ç–µ –≤ –∫–æ–Ω—Ü–µ –Ω—É–ª–∏, —Ç–∞–∫, —á—Ç–æ –±—ã –≤ –∏—Ç–æ–≥–µ –±—ã–ª–æ 8 —Å–∏–º–≤–æ–ª–æ–≤, "/" - –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!):\n\n1Ô∏è‚É£ –ù—É–∂–Ω–æ –ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ø–æ–ª–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –±–µ–∑ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π?\n\n2Ô∏è‚É£–û—Ç–∫–ª—é—á–∏—Ç—å –≤—ã–≤–æ–¥ –¥–∞—Ç—ã (—à–∞–ø–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è)?\n\n3Ô∏è‚É£ –í—ã–≤–æ–¥–∏—Ç—å –ª–∏ –∫–ª–∞—Å—Å, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?\n\n4Ô∏è‚É£–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏?\n\n5Ô∏è‚É£–í—ã–≤–æ–¥–∏—Ç—å –ª–∏ –Ω–æ–º–µ—Ä —É—Ä–æ–∫–∞? (–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π, —Å–¥–µ–ª–∞–µ–º –ø–æ –∑–∞–ø—Ä–æ—Å—É)\n\n6Ô∏è‚É£–°–æ–∫—Ä–∞—â–∞—Ç—å –ª–∏ –≤—ã–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ —É—Ä–æ–∫–æ–≤? (–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π, —Å–¥–µ–ª–∞–µ–º –ø–æ –∑–∞–ø—Ä–æ—Å—É)\n\n7Ô∏è‚É£–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π: –æ—Ç–∫–ª—é—á–∏—Ç—å –ª–∏ –≤—ã–≤–æ–¥ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –¥–ª—è –≤–∞—Å —É—Ä–æ–∫–∞? (–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫—É –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å "—É—Ä–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", –Ω–æ –≤–æ—Ç –≤—Å–µ –∫–ª–∞—Å—Å–Ω—ã–µ —á–∞—Å—ã –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫ –æ–±—ã—á–Ω–æ, —á—Ç–æ –±—ã –∫ –Ω–∏–º –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è)')


@bot.message_handler(commands=['info'])
def info(message):  # type: ignore
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"
        if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
        info = ""
        info += f"–ó–∞—Ä–µ–≥. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {count_users() - 2}\n"
        info += f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ –¥–µ–Ω—å: {active_users()}\n"
        info += f"–ü–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø: {count_grupp() - 1}\n"
        info += f"–ü–æ–¥–ø–∏—Å–∞–≤—à–∏—Ö—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É: {len(list(map(int, str(subscribers()).split())))}\n"
        info += f"–ê–¥–º–∏–Ω–æ–≤: {len(list(map(int, str(admins()).split())))}\n"
        """–†–∞—Å–∫–æ–º–µ–Ω—Ç–∏—Ç—å –Ω–∞ –º–∞–ª–∏–Ω–∫–µ"""
        # try: info += f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞: {get_cpu_temperature()}C\n"
        # except: pass
        info += f"–í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {reboot_time}\n"
        # info += f"–í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .xlsx: {timeprow()}\n"
        bot.send_message(message.chat.id, info)


@bot.message_handler(commands=['authors'])
def authors(message):  # type: ignore
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"

        if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
        bot.send_message(message.chat.id,
                         "–ü–∞—Ä–∞–≤–æ–∑–∏–∫ –¢–æ–º–∞—Å - –Ω–µ –µ–±—É –ø—Ä–∏—á–µ–º —Ç—É—Ç –ø–∞—Ä–∞–≤–æ–∑")


@bot.message_handler(commands=['getmyid'])
def getmyid(message):
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"

        if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
        bot.send_message(message.chat.id, "–í–∞—à –∞–π–¥–∏ —á–∞—Ç–∞: " + str(message.chat.id))
        bot.send_message(message.chat.id, "–í–∞—à –∞–π–¥–∏ –ª–∏—á–Ω—ã–π: " + str(message.from_user.id))


@bot.message_handler(commands=['rasp'])
def rasp(message):
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"

        if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
        bot.send_message(message.chat.id,
                         str(wiwod2(xxx(get_class_from_id(f'{message.chat.id}'), 1, message.chat.id), message.chat.id,
                                    1, get_class_from_id(f'{message.chat.id}'))))


@bot.message_handler(commands=['subscribe'])
def subscribe(message):
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"
        # bot.send_message(message.chat.id, "1")

        if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore

        if str(message.chat.id) in str(subscribers()):
            bot.send_message(message.chat.id, "–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã\n–û—Ç–∫–∞–∑–∞—Ç—å—Å—è - /unsubscribe")
        else:
            subscribers(f" {message.chat.id}")
            bot.send_message(message.chat.id,
                             "–£—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–∞–∑—É –∂–µ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–æ –ø–æ—è–≤–∏—Ç—Å—è.\n–ß—Ç–æ –±—ã –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /unsubscribe")


@bot.message_handler(commands=['unsubscribe'])
def unsubscribe(message):
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"
        # bot.send_message(message.chat.id, "1")

        if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore

        if str(message.chat.id) in str(subscribers()):
            bot.send_message(message.chat.id, "–£—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–∞–º –Ω–µ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            unsubscribers(f" {message.chat.id}")
        else:
            bot.send_message(message.chat.id, "–£—Å–ø–µ—à–Ω–æ! –ù–æ –≤—ã –∏ —Ç–∞–∫ –±—ã–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã")


@bot.message_handler(commands=['version'])
def versions(message):
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"

        if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
        bot.send_message(message.chat.id, version())


@bot.message_handler(commands=['donat'])
def donat(message):
    if ban(message.from_user.id):
        pass
    else:
        if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
            if message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184:
                bot.send_message(message.chat.id,
                                 f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
            else:
                bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                return "mute"

        if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore

        bot.send_message(message.chat.id, "5469 1600 1663 8376 –°–±–µ—Ä–±–∞–Ω–∫\n–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!")


@bot.message_handler(commands=['givemetoday'])
def givemetoday(message):
    bot.send_message(message.chat.id, givexlsx(message.chat.id, 0))


@bot.message_handler(commands=['givemetomorrow'])
def givemetomorrow(message):
    bot.send_message(message.chat.id, givexlsx(message.chat.id, 1))


@bot.message_handler(content_types=['text'])
def get__schedule(message):
    try:
        if ban(message.from_user.id):
            pass
        else:
            if mute("–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞"):
                if (message.chat.id in list(map(int, str(admins()).split()))) or message.chat.id == 650093184:
                    bot.send_message(message.chat.id,
                                     f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}\n–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è >unmute<")
                else:
                    bot.send_message(message.chat.id, f"–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute('')}")
                    return "mute"
            abba = str(message.text)
            abba = abba.replace(" ", "")
            abba = abba.replace(".", "")
            abba = abba.replace("'", "")
            abba = abba.replace('"', '')
            abba = abba.replace(" ", "")
            abba = abba.upper()
            abba = abba.replace("A", "–ê")
            abba = abba.replace("B", "–ë")
            abba = abba.replace("V", "–í")
            abba = abba.replace("G", "–ì")
            abba = abba.replace("D", "–î")
            abba = abba.replace("E", "–ï")
            # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä—É–ø–ø
            if message.chat.id < 0:
                if len(abba) == 9:
                    if abba.count("1") + abba.count("0") == 8 and "/" in abba:
                        if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
                        cursor.execute(f"UPDATE userdata SET settings=? WHERE usertelegramid=?",
                                       (str(message.text[1:]), message.chat.id))
                        conn.commit()
                        bot.send_message(message.chat.id,
                                         f"–ü—Ä–∏–Ω—è—Ç–æ, —Ç–µ–ø–µ—Ä—å –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {get_settings_from_id(message.chat.id)[0][0]}")
                    else:
                        pass
                elif "/" in abba:
                    if abba in awe:
                        add_user(message.chat.id, abba[1:])
                        bot.send_message(message.chat.id,
                                         text='–£—Å–ø–µ—à–Ω–æ, –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç'.format(
                                             message.from_user))
                return 0

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if "unmute" in message.text and (
                    message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184):
                mute("del")
                bot.send_message(message.chat.id, "–ë–æ—Ç –≤—ã–≤–µ–¥–µ–Ω –∏–∑ —Ä–µ–∂–∏–º–∞ –º–æ–ª—á–∞–Ω–∏—è, —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞—é—Ç –≤—Å–µ")
            elif "mute" in message.text and (
                    message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184):
                x = message.text[5:]
                mute(f"{x}")
                bot.send_message(message.chat.id,
                                 "–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –≤ —Ä–µ–∂–∏–º –º–æ–ª—á–∞–Ω–∏—è, —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–≥—É—Ç –ø–æ–ª—É—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã")
            elif message.text == '–ù–∞ —Å–µ–≥–æ–¥–Ω—è':
                setactive(message.from_user.id)
                if len(say()) != 0: bot.send_message(message.from_user.id, say())  # type: ignore
                # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                if get_user_info(f'{message.chat.id}'):
                    bot.send_message(message.chat.id,
                                     str(wiwod2(xxx(get_class_from_id(f'{message.chat.id}'), 1, message.chat.id),
                                                message.chat.id, 1, get_class_from_id(f'{message.chat.id}'))),
                                     reply_markup=std_keyboard)
                else:
                    bot.send_message(message.chat.id,
                                     "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –∫–ª–∞—Å—Å —Ç–µ–∫—Å—Ç–æ–º –≤ —á–∞—Ç–µ —Å —É–∫–∞–∑–∞–Ω–∏–º —Å–ª—ç—à–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫: /11–ë")
                    bot.send_message(message.chat.id,
                                     "–ò–ª–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å 11–ë –∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
            elif message.text == '–ù–∞ –∑–∞–≤—Ç—Ä–∞':

                setactive(message.from_user.id)
                if len(say()) != 0: bot.send_message(message.from_user.id, say())  # type: ignore
                # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                if get_user_info(f'{message.chat.id}'):
                    bot.send_message(message.chat.id,
                                     str(wiwod2(xxx(get_class_from_id(f'{message.chat.id}'), 2, message.chat.id),
                                                message.chat.id, 2, get_class_from_id(f'{message.chat.id}'))),
                                     reply_markup=std_keyboard)

                else:
                    bot.send_message(message.chat.id,
                                     "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –∫–ª–∞—Å—Å —Ç–µ–∫—Å—Ç–æ–º –≤ —á–∞—Ç–µ —Å —É–∫–∞–∑–∞–Ω–∏–º —Å–ª—ç—à–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫: /11–ë")
                    bot.send_message(message.chat.id,
                                     "–ò–ª–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å 11–ë+ –∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")

            elif ': ' in message.text or '–ù–∞–∑–∞–¥' in message.text or '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' in message.text:
                cur_settings = cursor.execute('SELECT settings FROM userdata WHERE usertelegramid=?',
                                              (message.chat.id,)).fetchone()[
                    0]  # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ id

                if len(cur_settings) < 8:
                    cursor.execute('UPDATE userdata SET settings=? WHERE usertelegramid=?',
                                   (cur_settings + '0' * (8 - len(cur_settings)), message.chat.id))
                    conn.commit
                    cur_settings = cursor.execute('SELECT settings FROM userdata WHERE usertelegramid=?',
                                                  (message.chat.id,)).fetchone()[0]

                if cur_settings != None:
                    ask1, ask2, ask3, ask4, ask5, ask6, ask7 = ['–Ω–µ—Ç' if int(i) else '–¥–∞' for i in
                                                                cur_settings[
                                                                :7]]  # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ -- –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–ª—É—á–∞–µ–º –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫

                    choose_sett = types.ReplyKeyboardMarkup(True, True)

                    der = {
                        '1: ': ask1,
                        '2: ': ask2,
                        '3: ': ask3,
                        '4: ': ask4,
                        '5: ': ask5,
                        '6: ': ask6,
                        '7: ': ask7
                    }  # –í —ç—Ç–æ–º —Å–ª–æ–≤–∞—Ä–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è: –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–≥–æ

                    ask1, ask2, ask3, ask4, ask5, ask6, ask7 = list(
                        der.values())  # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –º–∞–ª–æ –ª–∏ —á—Ç–æ
                    # –°–æ–∑–¥–∞—ë–º 6 –∫–Ω–æ–ø–æ–∫ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ "–ù–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞: –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–≥–æ" + –ù–∞–∑–∞–¥
                    choose_sett.row(f'1: {ask1}', f'2: {ask2}', f'3: {ask3}', f'4: {ask4}')
                    choose_sett.row(f'5: {ask5}', f'6: {ask6}', f'7: {ask7}', '–ù–∞–∑–∞–¥')
                    if message.text == '–ù–∞–∑–∞–¥':
                        bot.send_message(message.chat.id, "–í—ã –≤—ã—à–∏–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫",
                                         reply_markup=std_keyboard)
                    if message.text == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏':
                        bot.send_message(message.chat.id,
                                         f'üìé–°–µ–π—á–∞—Å –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ - {cur_settings}\n\n‚úèÔ∏è–î–ª—è –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –Ω–∏–∂–µ\n\n1Ô∏è‚É£ –ù—É–∂–Ω–æ –ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ø–æ–ª–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –±–µ–∑ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π?\n\n2Ô∏è‚É£–û—Ç–∫–ª—é—á–∏—Ç—å –≤—ã–≤–æ–¥ –¥–∞—Ç—ã (—à–∞–ø–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è)?\n\n3Ô∏è‚É£ –í—ã–≤–æ–¥–∏—Ç—å –ª–∏ –∫–ª–∞—Å—Å, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?\n\n4Ô∏è‚É£–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏?\n\n5Ô∏è‚É£–í—ã–≤–æ–¥–∏—Ç—å –ª–∏ –Ω–æ–º–µ—Ä —É—Ä–æ–∫–∞? (–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π, —Å–¥–µ–ª–∞–µ–º –ø–æ –∑–∞–ø—Ä–æ—Å—É)\n\n6Ô∏è‚É£–°–æ–∫—Ä–∞—â–∞—Ç—å –ª–∏ –≤—ã–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ —É—Ä–æ–∫–æ–≤? (–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π, —Å–¥–µ–ª–∞–µ–º –ø–æ –∑–∞–ø—Ä–æ—Å—É)\n\n7Ô∏è‚É£–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π: –æ—Ç–∫–ª—é—á–∏—Ç—å –ª–∏ –≤—ã–≤–æ–¥ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –¥–ª—è –≤–∞—Å —É—Ä–æ–∫–∞? (–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫—É –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å "—É—Ä–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", –Ω–æ –≤–æ—Ç –≤—Å–µ –∫–ª–∞—Å—Å–Ω—ã–µ —á–∞—Å—ã –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫ –æ–±—ã—á–Ω–æ, —á—Ç–æ –±—ã –∫ –Ω–∏–º –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è)',
                                         reply_markup=choose_sett)

                    if ': ' in message.text:  # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç ": ", —Ç–æ –º—ã –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ der –∏ –∏–∑–º–µ–Ω—è–µ–º –µ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º.
                        if der[message.text[
                               :3]] == '–¥–∞':  # message.text[:3] - —ç—Ç–æ –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞, if der[message.text[:3]] - –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–≥–æ.
                            der[message.text[:3]] = "–Ω–µ—Ç"
                        else:
                            der[message.text[:3]] = "–¥–∞"

                        cur_settings = ''.join(
                            ['0' if i == '–¥–∞' else '1' for i in list(der.values())])  # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ der

                        cursor.execute('UPDATE userdata SET settings=? WHERE usertelegramid=?',
                                       (cur_settings, message.chat.id))  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –±–¥
                        conn.commit()

                        ask1, ask2, ask3, ask4, ask5, ask6, ask7 = list(
                            der.values())  # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å, –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π

                        # –ü–µ—Ä–µ–æ–±—ä—è–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
                        choose_sett = types.ReplyKeyboardMarkup(True, True)
                        choose_sett.row(f'1: {ask1}', f'2: {ask2}', f'3: {ask3}', f'4: {ask4}')
                        choose_sett.row(f'5: {ask5}', f'6: {ask6}', f'7: {ask7}', '–ù–∞–∑–∞–¥')

                        bot.send_message(message.chat.id, f'–ü—Ä–∏–Ω—è—Ç–æ, –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ - {cur_settings}',
                                         reply_markup=choose_sett)  # –ù—É —Ç—É—Ç —Ç—ã –∏ —Å–∞–º –ø–æ–π–º–µ—à—å
                else:
                    bot.send_message(message.chat.id,
                                     "–í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –∏ —ç—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω\n–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –Ω–∞–ø–∏—Å–∞–≤ —Å–Ω–∞—á–∞–ª–∞ /, –∞ –∑–∞—Ç–µ–º —Ü–∏—Ñ—Ä—É –∏ –±—É–∫–≤—É –≤–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: /11–ë",
                                     reply_markup=std_keyboard)

            elif 'remove' in message.text and (
                    message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184):
                x = message.text[7:]
                try:
                    get_files1 = os.listdir(otkyda)
                    if f"{x}" in get_files1: os.remove(f"{otkyda}{x}")
                    get_files2 = os.listdir(kyda)
                    if f"{x}" in get_files2: os.remove(f"{kyda}{x}")
                    bot.reply_to(message, "–£—Å–ø–µ—à–Ω–æ!")
                except Exception as e:
                    bot.reply_to(message, e)  # type: ignore
            elif "whoisadmin" in message.text and (
                    message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184):
                global im_done
                user_id = message.from_user.id
                current_time_now = time.time()
                # daF = str(message.text); daF = daF.replace("/", "")
                if user_id in spam_count:
                    if spam_count[user_id]["count"] >= SPAM_LIMIT:
                        if current_time_now - spam_count[user_id]["last_time"] < SPAM_TIME_LIMIT:
                            return
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if user_id in spam_count:
                    spam_count[user_id]["count"] += 1
                    spam_count[user_id]["last_time"] = current_time_now
                else:
                    spam_count[user_id] = {"count": 1, "last_time": current_time_now}

                if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore

                bot.send_message(message.chat.id, str(list(map(int, str(admins()).split()))))
            elif "unadm" in message.text and (
                    message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184):
                x = message.text[6:]

                if len(x) > 6:
                    if not (int(x) in list(map(int, str(admins()).split()))):
                        bot.send_message(message.chat.id, f"–ì–æ—Ç–æ–≤–æ, –Ω–æ {x} –∏ —Ç–∞–∫ –Ω–µ –±—ã–ª –∞–¥–∏–º–Ω–æ–º")
                    else:
                        try:
                            unadmins(x)
                            bot.send_message(message.chat.id,
                                             f"–£—Å–ø–µ—à–Ω–æ! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {x} –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
                        except:
                            bot.send_message(message.chat.id,
                                             "–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
                else:
                    bot.send_message(message.chat.id,
                                     "–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, —É–∫–∞–∂–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ unadm XXXXXXXXXX, –≥–¥–µ –≤—Å–µ X –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –Ω–∞–º–µ—Ä–µ–Ω—ã –ª–∏—à–∏—Ç—å –ø—Ä–∞–≤ –∞–¥–∏–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–π–¥–∏ –ø–æ–ª—å–∑–∞–≤–∞—Ç–µ–ª—è –≤–æ—Å–ø–æ–ª—å–∑—É—ë—Ç–µ—Å—å —Å –µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–µ–π /getmyid\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å >whoisadm<")
            elif "adm" in message.text and not ("un" in message.text) and (
                    message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184):
                x = message.text[4:]
                if len(x) > 6:
                    if int(x) in list(map(int, str(admins()).split())):
                        bot.send_message(message.chat.id, "–≠—Ç–æ—Ç –ø–æ–ª—å–∑–∞–≤–∞—Ç–µ–ª—å –∏ —Ç–∞–∫ —É–∂–µ –∞–¥–º–∏–Ω, –∫—É–¥–∞ –≤—ã—à–µ?")
                    else:
                        try:
                            admins(x)
                            bot.send_message(message.chat.id,
                                             f"–£—Å–ø–µ—à–Ω–æ! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∞–π–¥–∏ {x} –ø—Ä–∏—Å–≤–æ–µ–Ω —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                            bot.send_message(x, "–¢–µ–ø–µ—Ä—å –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                        except:
                            bot.send_message(message.chat.id,
                                             "–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
                else:
                    bot.send_message(message.chat.id,
                                     "–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, —É–∫–∞–∂–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ adm XXXXXXXXXX, –≥–¥–µ –≤—Å–µ X –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –Ω–∞–º–µ—Ä–µ–Ω—ã —Å–¥–µ–ª–∞—Ç—å –∞–¥–∏–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–π–¥–∏ –ø–æ–ª—å–∑–∞–≤–∞—Ç–µ–ª—è –≤–æ—Å–ø–æ–ª—å–∑—É—ë—Ç–µ—Å—å —Å –µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–µ–π /getmyid")
            elif message.text == 'sudo reboot' and (
                    message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184):
                bot.send_message(message.chat.id, "please wait ~4 min")
                komy(f"{message.chat.id}")
                time.sleep(2)
                reboot()
            elif (message.text.isdigit() or message.text in ['–ì–µ–æ–ª.–º—É–∑–µ–π', '–ë.—Å–ø–æ—Ä—Ç.–∑–∞–ª', '–ò—Å—Ç.–º—É–∑–µ–π']) and (
                    message.text.count("1") + message.text.count("0") != 8):
                bot.send_message(message.chat.id,
                                 str(wiwod2(xxx(message.text, 1, message.chat.id), message.chat.id, 1, message.text)))
            elif abba in qwq and "-" in abba:
                if not ("+" in abba):
                    day = 1
                else:
                    day = 2
                    abba = abba[:-1]
                setactive(message.from_user.id)
                if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
                text = ""
                if day == 1:
                    data = str(wiwod2(xxx((abba[:abba.find("-")] + "–ê"), day, 1), 1, 1, (abba[:abba.find("-")] + "–ê")))
                else:
                    data = str(wiwod2(xxx((abba[:abba.find("-")] + "–ê"), day, 1), 1, 2, (abba[:abba.find("-")] + "–ê")))
                try:
                    data = data[data.find("üóì"):(data.find(":") - 4)]
                except:
                    data = "–ù–µ –∏–∑–≤–µ—Å—Ç–Ω–∞"
                text = text + data + "\n\n"
                try:
                    for i in "–ê–ë–í–ì–î–ï":
                        text_to_append = str(
                            wiwod2(xxx((abba[:abba.find("-")] + i), day, 0), 0, 1, (abba[:abba.find("-")] + i))) + "\n"
                        if len(text_to_append) > 30:
                            text = text + text_to_append
                except:
                    pass
                bot.send_message(message.chat.id, text)
            elif "/" in abba:
                if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
                if abba in awe:
                    print(abba, message.chat.id)
                    add_user(message.chat.id, abba[1:])
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    btn1 = types.KeyboardButton("–ù–∞ —Å–µ–≥–æ–¥–Ω—è")
                    btn2 = types.KeyboardButton("–ù–∞ –∑–∞–≤—Ç—Ä–∞")
                    markup.add(btn1, btn2)
                    bot.send_message(message.chat.id,
                                     text='–£—Å–ø–µ—à–Ω–æ, –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç'.format(message.from_user),
                                     reply_markup=std_keyboard)
                    # cursor.execute(f"UPDATE userdate SET settings=? WHERE id=?",(10000000,650093184))
            elif abba in qwq:
                if not ("+" in abba):
                    day = 1
                else:
                    day = 2
                    abba = abba[:-1]
                setactive(message.from_user.id)
                if len(say()) != 0: bot.send_message(message.chat.id, say())  # type: ignore
                bot.send_message(message.chat.id,
                                 str(wiwod2(xxx(abba, day, message.chat.id), message.chat.id, 1, abba)))
            elif "say" in message.text and (
                    message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184):
                if "no" in message.text:
                    say("~%~$~~!")
                else:
                    say(message.text[3:])
                bot.send_message(message.chat.id, "accepted")
            elif "eval" in message.text and (
                    message.chat.id in list(map(int, str(admins()).split())) or message.chat.id == 650093184):
                x = message.text[5:]
                eval(f"{x}")
                bot.send_message(message.chat.id, "done")
            elif len(abba) == 8:
                if abba.count("1") + abba.count("0") == 8:
                    if len(say()) != 0: bot.send_message(message.from_user.id, say())  # type: ignore
                    cursor.execute(f"UPDATE userdata SET settings=? WHERE usertelegramid=?",
                                   (str(message.text), message.chat.id))
                    conn.commit()
                    bot.send_message(message.from_user.id,
                                     f"–ü—Ä–∏–Ω—è—Ç–æ, —Ç–µ–ø–µ—Ä—å –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {get_settings_from_id(message.chat.id)[0][0]}")
                else:
                    pass  # bot.send_message(message.from_user.id, "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞")
            else:
                if len(message.chat.id) > 0:
                    if len(say()) != 0: pass  # bot.send_message(message.from_user.id, say()) # type: ignore
                    # bot.send_message(message.from_user.id, "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞")
    except Exception as e:
        pass  # bot.send_message(650093184, e)  # type: ignore



# –ü–æ –ø—Ä–∏–∫–æ–ª—É
@bot.message_handler(content_types=['photo', 'text'], func=lambda message: True)
def handle_photo(message):
    if message.photo:
        photo = message.photo[-1]
        file_id = photo.file_id
        file_info = bot.get_file(file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        bot.send_message(650093184, str(message.from_user.id))
        bot.send_photo(650093184, downloaded_file, caption=message.caption)



def botara():
    while True:
        try:
            bot.polling(none_stop=True, interval=0)
            logf.write(f"[{datetime.datetime.now().strftime('%d/%m/%y %H:%M:%S')}] BOT STARTED POLLONG\n")
        except Exception as e:
            time.sleep(10)
            logf.write(f"[{datetime.datetime.now().strftime('%d/%m/%y %H:%M:%S')}] ERROR at botara with {e}\n")
            print(e)
            print("restart")
            continue


def prow():
    a = date()
    b = (datetime.date.today()).strftime('%d.%m.%Y')
    if not (a == b):
        make_unactive("1")
        date(b)


def nolnol():
    prow()
    time.sleep(3600)


# —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å –æ –∑–∞–ø—É—Å–∫–µ
print("i'am has been started")
logf.write(f"[{datetime.datetime.now().strftime('%d/%m/%y %H:%M:%S')}] bot has been started\n")
# make_unactive("NOW")

# print(str(get_settings_from_id(5967500116)))
# –æ—Ç–ø—Ä–≤–∫–∞ "done" —Ç–æ–º—É, –∫—Ç–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏–ª —Å–∏—Å—Ç–µ–º—É –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
if komy() != 1:
    send_done(komy())
    komy("000")
# –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ—Ç–æ–º —Ç—Ä—ë—Ö –ø–æ—Ç–æ–∫–æ–≤
th1 = threading.Thread(target=botara)
#th2 = threading.Thread(target=nolnol)
# th2 = threading.Thread(target=planreboot)
#cursor.execute(f"DELETE FROM userdata;")
th1.start()
#th2.start()
# –≤—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫
#cursor.execute(f"UPDATE userdata SET settings=? WHERE id=?",(00000000,650093184))
